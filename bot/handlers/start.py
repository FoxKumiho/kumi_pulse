# –ü—É—Ç—å —Ñ–∞–π–ª–∞: bot/handlers/start.py

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.exceptions import TelegramBadRequest
from bot.modules.no_sql.user_db import User, get_user, set_server_owner, OWNER_BOT_ID, ROLE_NAMES
from bot.handlers.common import register_all_chat_members
from loguru import logger
import time
from typing import Optional
import aiogram

# –ò—Å–ø–æ–ª—å–∑—É–µ–º aiogram –≤–µ—Ä—Å–∏–∏ 3.20.0.post0
assert aiogram.__version__ == "3.20.0.post0", f"Expected aiogram version 3.20.0.post0, but found {aiogram.__version__}"

# –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ ROLE_NAMES
try:
    logger.info(f"ROLE_NAMES —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {ROLE_NAMES}")
except NameError as e:
    logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ROLE_NAMES: {str(e)}")
    raise

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞
router = Router()

# –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
START_TIME = time.time()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_MESSAGE = (
    "üåü **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!** üåü\n"
    "üëã –ü—Ä–∏–≤–µ—Ç, {name}!\n"
    "üé≠ **–¢–≤–æ—è —Ä–æ–ª—å**: {role}\n"
    "‚è∞ **–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç**: {uptime}\n"
    "{args_text}\n"
    "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π **/help**, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.\n"
    "‚ö†Ô∏è –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω–∞ –∏–ª–∏ –Ω–µ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –ø–æ–ø—Ä–æ–±—É–π **/start test_owner** –∏–ª–∏ **/force_register_all**."
)
HELP_MESSAGE = (
    "üìö **–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥** üìö\n"
    "üëã **/start** ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è (–¥–ª—è –≤—Å–µ—Ö)\n"
    "‚ÑπÔ∏è **/help** ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–ª—è –≤—Å–µ—Ö)\n"
    "üíé **/premium** ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å Premium (–¥–ª—è –≤—Å–µ—Ö, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç—Å—è)\n"
    "üõ†Ô∏è **/admin** ‚Äî –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç—Å—è)\n"
    "‚ö†Ô∏è **/warn <user_id | @username | –∏–º—è> [–ø—Ä–∏—á–∏–Ω–∞]** ‚Äî –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (–ú–ª–∞–¥—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üßπ **/clear_warnings <user_id | @username | –∏–º—è>** ‚Äî –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üóëÔ∏è **/clear <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ> | reply** ‚Äî –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è (–ú–ª–∞–¥—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üîá **/mute <user_id | @username | –∏–º—è> <–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_–º–∏–Ω—É—Ç–∞—Ö> [–ø—Ä–∏—á–∏–Ω–∞]** ‚Äî –ó–∞–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üîä **/unmute <user_id | @username | –∏–º—è>** ‚Äî –°–Ω—è—Ç—å –º—É—Ç (–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üö´ **/ban <user_id | @username | –∏–º—è> [–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å_–≤_–º–∏–Ω—É—Ç–∞—Ö] [–ø—Ä–∏—á–∏–Ω–∞]** ‚Äî –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ú–ª–∞–¥—à–∏–π –∞–¥–º–∏–Ω)\n"
    "‚úÖ **/unban <user_id | @username | –∏–º—è>** ‚Äî –†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–°—Ç–∞—Ä—à–∏–π –∞–¥–º–∏–Ω)\n"
    "üë¢ **/kick <user_id | @username | –∏–º—è> [–ø—Ä–∏—á–∏–Ω–∞]** ‚Äî –ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ú–ª–∞–¥—à–∏–π –∞–¥–º–∏–Ω)\n"
    "üìä **/user_status <user_id | @username | –∏–º—è>** ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ú–ª–∞–¥—à–∏–π –∞–¥–º–∏–Ω)\n"
    "üìú **/mod_logs** ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "‚ùì **/help_moderation** ‚Äî –°–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ (–ú–ª–∞–¥—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)\n"
    "üìã **/register_all** ‚Äî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞ (–í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞)\n"
    "üìã **/force_register_all** ‚Äî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ (–í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞)\n"
    "\nüé≠ **–¢–≤–æ—è —Ä–æ–ª—å**: {role}"
)
ERROR_MESSAGE = (
    "üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
)
PERMISSION_ERROR_MESSAGE = (
    "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞.\n"
    "üîê –£–±–µ–¥–∏—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–ø–∏—Å–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
    "üìã –ü–æ–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—É **/force_register_all**."
)

def get_readable_time(seconds: int) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–µ–∫—É–Ω–¥—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ (–¥–Ω–∏, —á–∞—Å—ã, –º–∏–Ω—É—Ç—ã, —Å–µ–∫—É–Ω–¥—ã).

    Args:
        seconds: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥

    Returns:
        –°—Ç—Ä–æ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, "1d:2h:30m:15s"
    """
    count = 0
    ping_time = ""
    time_list = []
    time_suffix_list = ["s", "m", "h", "days"]

    while count < 4:
        count += 1
        remainder, result = divmod(seconds, 60) if count < 3 else divmod(seconds, 24)
        if seconds == 0 and remainder == 0:
            break
        time_list.append(int(result))
        seconds = int(remainder)

    for x in range(len(time_list)):
        time_list[x] = str(time_list[x]) + time_suffix_list[x]
    if len(time_list) == 4:
        ping_time += time_list.pop() + ", "

    time_list.reverse()
    ping_time += ":".join(time_list)

    return ping_time

@router.message(Command(commands=["start"]))
async def start_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ —Ä–æ–ª—å –∏
    –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ.

    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç aiogram
    """
    user_id: int = message.from_user.id
    chat_id: int = message.chat.id
    args: Optional[str] = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user: User = await get_user(user_id, create_if_not_exists=True, chat_id=chat_id)
        uptime: str = get_readable_time(int(time.time() - START_TIME))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram API
        if message.chat.type in ["group", "supergroup"]:
            try:
                chat_admins = await message.bot.get_chat_administrators(chat_id)
                for admin in chat_admins:
                    if admin.user.id == user_id and admin.status == "creator":
                        if chat_id not in user.server_owner_chat_ids:
                            await set_server_owner(user_id, chat_id)
                            user = await get_user(user_id, create_if_not_exists=False, chat_id=chat_id)
                            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∫–∞–∫ –≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞ {chat_id} —á–µ—Ä–µ–∑ API")

                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
                await register_all_chat_members(chat_id, message.bot)
                logger.info(f"–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è chat_id={chat_id}")
            except TelegramBadRequest as e:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ {chat_id}: {str(e)}")
                if user.role_level >= 6:
                    await message.answer(PERMISSION_ERROR_MESSAGE)

        # –¢–µ—Å—Ç–æ–≤–∞—è —Ä–æ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å–µ—Ä–≤–µ—Ä–∞
        if args == "test_owner" and user.role_level < 6:
            await set_server_owner(user_id, chat_id)
            user = await get_user(user_id, create_if_not_exists=False, chat_id=chat_id)
            logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–æ–ª—å –í–ª–∞–¥–µ–ª–µ—Ü —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è user_id={user_id}, chat_id={chat_id}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        args_text: str = f"üì¶ **–ê—Ä–≥—É–º–µ–Ω—Ç—ã**: {args}\n" if args else ""
        text: str = WELCOME_MESSAGE.format(
            name=user.display_name or message.from_user.full_name,
            role=user.get_role_for_chat(chat_id),
            uptime=uptime,
            args_text=args_text
        )
        await message.answer(text)
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: user_id={user_id}, chat_id={chat_id}, —Ä–æ–ª—å={user.get_role_for_chat(chat_id)}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: user_id={user_id}, chat_id={chat_id}, –æ—à–∏–±–∫–∞={str(e)}")
        await message.answer(ERROR_MESSAGE)

@router.message(Command(commands=["help"]))
async def help_handler(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.

    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç aiogram
    """
    user_id: int = message.from_user.id
    chat_id: int = message.chat.id
    try:
        user: User = await get_user(user_id, create_if_not_exists=True, chat_id=chat_id)
        logger.debug(f"–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HELP_MESSAGE –¥–ª—è user_id={user_id}, chat_id={chat_id}")
        text: str = HELP_MESSAGE.format(
            name=user.display_name or message.from_user.full_name,
            role=user.get_role_for_chat(chat_id)
        )
        await message.answer(text)
        logger.info(f"–ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: user_id={user_id}, chat_id={chat_id}, —Ä–æ–ª—å={user.get_role_for_chat(chat_id)}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /help: user_id={user_id}, chat_id={chat_id}, –æ—à–∏–±–∫–∞={str(e)}")
        await message.answer(ERROR_MESSAGE)